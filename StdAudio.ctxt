#BlueJ class context
comment0.params=
comment0.target=StdAudio()
comment1.params=
comment1.target=void\ init()
comment10.params=hz\ duration\ amplitude
comment10.target=double[]\ note(double,\ double,\ double)
comment10.text=\n\ sample\ test\ client\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\n\ Test\ client\ -\ play\ an\ A\ major\ scale\ to\ standard\ audio.\n
comment2.params=
comment2.target=void\ close()
comment2.text=\n\ Close\ standard\ audio.\n
comment3.params=in
comment3.target=void\ play(double)
comment3.text=\n\ Write\ one\ sample\ (between\ -1.0\ and\ +1.0)\ to\ standard\ audio.\ If\ the\ sample\n\ is\ outside\ the\ range,\ it\ will\ be\ clipped.\n
comment4.params=input
comment4.target=void\ play(double[])
comment4.text=\n\ Write\ an\ array\ of\ samples\ (between\ -1.0\ and\ +1.0)\ to\ standard\ audio.\ If\ a\ sample\n\ is\ outside\ the\ range,\ it\ will\ be\ clipped.\n
comment5.params=filename
comment5.target=double[]\ read(java.lang.String)
comment5.text=\n\ Read\ audio\ samples\ from\ a\ file\ (in\ .wav\ or\ .au\ format)\ and\ return\ them\ as\ a\ double\ array\n\ with\ values\ between\ -1.0\ and\ +1.0.\n
comment6.params=filename
comment6.target=void\ play(java.lang.String)
comment6.text=\n\ Play\ a\ sound\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ background\ thread.\n
comment7.params=filename
comment7.target=void\ loop(java.lang.String)
comment7.text=\n\ Loop\ a\ sound\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ background\ thread.\n
comment8.params=filename
comment8.target=byte[]\ readByte(java.lang.String)
comment9.params=filename\ input
comment9.target=void\ save(java.lang.String,\ double[])
comment9.text=\n\ Save\ the\ double\ array\ as\ a\ sound\ file\ (using\ .wav\ or\ .au\ format).\n
numComments=12
